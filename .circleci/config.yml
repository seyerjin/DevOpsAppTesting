version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.8

jobs:
  test_local:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - browser-tools/install-browser-tools
      - run:
          name: Install necessary system dependencies for browsers
          command: sudo apt-get update && sudo apt-get install -y libgtk-3-0 libdbus-glib-1-2 libxt6 libasound2
      - run:
          name: Install Robot Framework and SeleniumLibrary
          command: pip install robotframework robotframework-seleniumlibrary
      - run:
          name: "Run Tests on Local Chrome"
          command: |
            mkdir -p results/local
            robot -v BROWSER:Chrome -d results/local tests/
      - store_artifacts:
          path: results/local/chrome
          destination: test-reports/local/chrome

  test_remote:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - browser-tools/install-browser-tools
      - run:
          name: Install necessary system dependencies for browsers
          command: sudo apt-get update && sudo apt-get install -y libgtk-3-0 libdbus-glib-1-2 libxt6 libasound2
      - run:
          name: Install Opera and OperaDriver
          command: |
            wget -q -O operadriver.zip https://github.com/operasoftware/operachromiumdriver/releases/download/v.104.0.5112.81/operadriver_linux64.zip
            unzip operadriver.zip -d operadriver
            sudo mv operadriver/operadriver_linux64/operadriver /usr/local/bin/
            wget -q -O opera.deb https://download3.operacdn.com/pub/opera/desktop/84.0.4316.21/linux/opera-stable_84.0.4316.21_amd64.deb
            sudo dpkg -i opera.deb || sudo apt-get install -yf
      - run:
          name: Install Edge and Edge WebDriver
          command: |
            # Install dependencies
            sudo apt-get update && sudo apt-get install -y curl jq
            # Download and install the latest stable version of Microsoft Edge
            EDGE_DEB_URL=$(curl -s https://packages.microsoft.com/repos/edge/pool/main/m/microsoft-edge-stable/ | grep -oP 'href="\K[^"]+' | grep -E 'amd64\.deb$' | sort -V | tail -n 1 | xargs -I{} echo "https://packages.microsoft.com/repos/edge/pool/main/m/microsoft-edge-stable/{}")
            echo "Downloading Microsoft Edge from: $EDGE_DEB_URL"
            wget -q -O edge.deb $EDGE_DEB_URL
            sudo dpkg -i edge.deb || sudo apt-get install -yf
            # Fetch the latest Edge WebDriver version dynamically and clean up the version string
            LATEST_EDGE_DRIVER_VERSION=$(curl -s https://msedgedriver.azureedge.net/LATEST_STABLE | tr -d '\r' | tr -d '\n' | tr -d '\377\376')
            LATEST_EDGE_DRIVER_URL="https://msedgedriver.azureedge.net/${LATEST_EDGE_DRIVER_VERSION}/edgedriver_linux64.zip"
            echo "Downloading Edge WebDriver from: $LATEST_EDGE_DRIVER_URL"
            wget -q -O edgedriver.zip $LATEST_EDGE_DRIVER_URL
            unzip edgedriver.zip -d edgedriver
            sudo mv edgedriver/msedgedriver /usr/local/bin/
      - run:
          name: Install Robot Framework and SeleniumLibrary
          command: pip install robotframework robotframework-seleniumlibrary
      - run:
          name: "Run Tests on Multiple Remote Browsers"
          command: |
            #robot -v BROWSER:Chrome -d results/remote tests/
            #robot -v BROWSER:Firefox -d results/remote tests/
            #robot -v BROWSER:Edge -d results/remote tests/
            #robot -v BROWSER:Opera -d results/remote tests/
            #robot -v BROWSER:Safari -d results/remote tests/
            mkdir -p results/remote
            # Set BrowserStack environment variables
            export BROWSERSTACK_USERNAME=$BROWSERSTACK_USERNAME
            export BROWSERSTACK_ACCESS_KEY=$BROWSERSTACK_ACCESS_KEY
            # Run tests on BrowserStack remote browsers
            # Define a unique directory for each browser's results
            robot -v BROWSER:Chrome -v REMOTE_URL:https://${BROWSERSTACK_USERNAME}:${BROWSERSTACK_ACCESS_KEY}@hub-cloud.browserstack.com/wd/hub -d results/remote/chrome tests/
            robot -v BROWSER:Firefox -v REMOTE_URL:https://${BROWSERSTACK_USERNAME}:${BROWSERSTACK_ACCESS_KEY}@hub-cloud.browserstack.com/wd/hub -d results/remote/firefox tests/
            robot -v BROWSER:Edge -v REMOTE_URL:https://${BROWSERSTACK_USERNAME}:${BROWSERSTACK_ACCESS_KEY}@hub-cloud.browserstack.com/wd/hub -d results/remote/edge tests/
            robot -v BROWSER:Opera -v REMOTE_URL:https://${BROWSERSTACK_USERNAME}:${BROWSERSTACK_ACCESS_KEY}@hub-cloud.browserstack.com/wd/hub -d results/remote/opera tests/
            # Example for Safari on BrowserStack
            # robot -v BROWSER:Safari -v REMOTE_URL:https://${BROWSERSTACK_USERNAME}:${BROWSERSTACK_ACCESS_KEY}@hub-cloud.browserstack.com/wd/hub -d results/remote tests/   
      - store_artifacts:
          path: results/remote
          destination: test-reports
  test_mac:
    macos:
      xcode: "12.5.1"
    steps:
      - checkout
      - run:
          name: Install Robot Framework and SeleniumLibrary
          command: |
            pip3 install robotframework robotframework-seleniumlibrary selenium
      - run:
          name: Enable SafariDriver
          command: |
            sudo safaridriver --enable
      - run:
          name: Enable Safari Remote Automation
          command: |
            osascript enable_safari_automation.applescript
      - run:
          name: "Run Tests on Safari-Browser (MAC)"
          command: |
            robot -v BROWSER:Safari -d results/safari tests/
      - store_artifacts:
          path: results/safari
          destination: test-reports

#  store_artifacts:
#    docker:
#      - image: cimg/python:3.9
#    steps:
#      - checkout
#      - attach_workspace:
#          at: /tmp/workspace
#      - store_artifacts:
#          path: results
#          destination: test-reports

workflows:
  version: 2
  build:
    jobs:
      - test_local
      - test_remote
      #- test_mac
      #- store_artifacts:
      #    requires:
      #      - test_local
      #      - test_remote
